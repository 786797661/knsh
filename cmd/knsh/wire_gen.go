// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"knsh/internal/biz"
	"knsh/internal/conf"
	"knsh/internal/data"
	"knsh/internal/server"
	"knsh/internal/service"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, confData *conf.Data, auth *conf.Auth, registry *conf.Registry, logger log.Logger) (*kratos.App, func(), error) {
	db := data.NewDB(confData)
	println("NewDB")
	dataData, cleanup, err := data.NewData(confData, logger, db)
	println("NewData")
	if err != nil {
		return nil, nil, err
	}
	realworldRepo := data.NewRealworldRepo(dataData, logger)
	println("NewRealworldRepo")
	greeterRealworld := biz.NewGreeterRealworld(realworldRepo, logger)
	println("NewGreeterRealworld")
	realworldService := service.NewrealworldService(greeterRealworld, logger)
	println("NewrealworldService")
	httpServer := server.NewHTTPServer(confServer, auth, realworldService, logger)
	println("3")
	grpcServer := server.NewGRPCServer(confServer, auth, realworldService, logger)
	println("4")
	registrar := server.NewRegistrar(registry)
	println("5")
	app := newApp(logger, httpServer, grpcServer, registrar)
	println("6")
	return app, func() {
		cleanup()
		println("7")
	}, nil
}
